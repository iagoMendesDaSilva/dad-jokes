// Generated by Dagger (https://dagger.dev).
package com.iago.pokewatch.di;

import com.iago.pokewatch.api.PokeApi;
import com.iago.pokewatch.repository.PokeRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideRepositoryFactory implements Factory<PokeRepository> {
  private final Provider<PokeApi> apiProvider;

  public AppModule_ProvideRepositoryFactory(Provider<PokeApi> apiProvider) {
    this.apiProvider = apiProvider;
  }

  @Override
  public PokeRepository get() {
    return provideRepository(apiProvider.get());
  }

  public static AppModule_ProvideRepositoryFactory create(Provider<PokeApi> apiProvider) {
    return new AppModule_ProvideRepositoryFactory(apiProvider);
  }

  public static PokeRepository provideRepository(PokeApi api) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideRepository(api));
  }
}
